syntax = "proto3";

package raft;

option go_package = "raft";

service Node {
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse) {}
  rpc RequestVote(RequestVoteRequest) returns (RequestVoteResponse) {}
}

message AppendEntriesRequest {
  enum EntryType
  {
    CREATED = 0;
    DELETED = 1;
  }

  message Entry {
    string key = 1;
    bytes payload = 2;
    uint64 term = 3;
    EntryType type = 4;
  }

  uint64 term = 1;
  string leader_id = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated Entry entries = 5;
  uint64 leader_commit = 6;
}

message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}

message RequestVoteRequest {
  uint64 term = 1;
  string candidate_id = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

message RequestVoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}